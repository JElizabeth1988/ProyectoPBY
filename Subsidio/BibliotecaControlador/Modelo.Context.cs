//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BibliotecaControlador
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class EntitiesSubsidio : DbContext
    {
        public EntitiesSubsidio()
            : base("name=EntitiesSubsidio")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ESTADO_CIVIL> ESTADO_CIVIL { get; set; }
        public DbSet<GENERO> GENERO { get; set; }
        public DbSet<NACIONALIDAD> NACIONALIDAD { get; set; }
        public DbSet<PUNTAJE_CARGA_FAMILIAR> PUNTAJE_CARGA_FAMILIAR { get; set; }
        public DbSet<PUNTAJE_EDAD> PUNTAJE_EDAD { get; set; }
        public DbSet<PUNTAJE_ESTADO_CIVIL> PUNTAJE_ESTADO_CIVIL { get; set; }
        public DbSet<PUNTAJE_MONTO_AHORRO> PUNTAJE_MONTO_AHORRO { get; set; }
        public DbSet<PUNTAJE_PUEBLO_ORIGINARIO> PUNTAJE_PUEBLO_ORIGINARIO { get; set; }
        public DbSet<PUNTAJE_TITULO> PUNTAJE_TITULO { get; set; }
        public DbSet<PUNTAJE_ZONA_EXTREMA> PUNTAJE_ZONA_EXTREMA { get; set; }
        public DbSet<RECEPTOR> RECEPTOR { get; set; }
        public DbSet<REGION> REGION { get; set; }
        public DbSet<TITULO> TITULO { get; set; }
        public DbSet<PUEBLO_ORIGINARIO> PUEBLO_ORIGINARIO { get; set; }
        public DbSet<PUNTAJE_POSTULANTE> PUNTAJE_POSTULANTE { get; set; }
        public DbSet<VIVIENDA> VIVIENDA { get; set; }
        public DbSet<PUNTAJE_TOTAL> PUNTAJE_TOTAL { get; set; }
        public DbSet<V_TESTING> V_TESTING { get; set; }
        public DbSet<POSTULANTE> POSTULANTE { get; set; }
    
        public virtual int SP_PUNTAJES(string rUT, ObjectParameter pNTJ_CARGAS, ObjectParameter pNTJ_EDAD, ObjectParameter pNTJ_ESTADO, ObjectParameter pNTJ_TITULO, ObjectParameter pNTJ_REGION, ObjectParameter pNTJ_PUEBLOS, ObjectParameter pNTJ_AHORRO, ObjectParameter pNTJ_TOTAL)
        {
            var rUTParameter = rUT != null ?
                new ObjectParameter("RUT", rUT) :
                new ObjectParameter("RUT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PUNTAJES", rUTParameter, pNTJ_CARGAS, pNTJ_EDAD, pNTJ_ESTADO, pNTJ_TITULO, pNTJ_REGION, pNTJ_PUEBLOS, pNTJ_AHORRO, pNTJ_TOTAL);
        }
    
        public virtual int FN_LISTAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FN_LISTAR");
        }
    
        public virtual int FN_LISTAR_BENEF()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FN_LISTAR_BENEF");
        }
    }
}
